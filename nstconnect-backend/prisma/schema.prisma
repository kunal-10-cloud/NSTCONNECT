// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User{
  id Int @id @default(autoincrement())
  name String 
  email String @unique
  password String
  department String?
  profilePic String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  sentRequests FriendRequest[] @relation("sent")
  receivedRequests FriendRequest[] @relation("received")
  friends Friend[] @relation("userFriends")
  friendOf Friend[] @relation("FriendUsers")
}

enum RequestStatus {
  PENDING
  ACCEPTED
  REJECTED
}

model FriendRequest {
  id Int @id @default(autoincrement())
  senderId Int 
  receiverId Int 
  status RequestStatus @default(PENDING)
  createdAt DateTime @default(now())
  sender   User @relation("sent", fields: [senderId], references: [id])
  receiver User @relation("received", fields: [receiverId], references: [id])

}

model Friend {
  id Int @id @default(autoincrement())
  userId Int
  friendId Int
  createdAt DateTime @default(now())
  user   User @relation("userFriends", fields: [userId], references: [id])
  friend User @relation("FriendUsers", fields: [friendId], references: [id])

}
